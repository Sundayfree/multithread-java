package workers;



import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;

import tasks.ITask;
import tasks.OrderTask;
import tasks.TaskResult;


public class OrderWorker extends Worker {
	@Override
    public  TaskResult taskHandler(ITask input) {
        OrderTask order = (OrderTask) input;
		 TaskResult result = null;
	        try {
	        	this.setId(new Random().nextInt(1000));
	            this.setName ("liu"+ new Random ().nextInt (100));
	            this.setDept ("Order Department");
	          

	     
	           System.out.println ("order  worker:  "+Thread.currentThread ().getName()+ "  Order"+this.toString() + " is doing "+order.toString());
	           TimeUnit.SECONDS.sleep(1);
	          //TODO
	            result =new TaskResult(order.getId(), order);
	        } catch (InterruptedException e) {
	            e.printStackTrace ();
	        }
        return result;
    }
}
